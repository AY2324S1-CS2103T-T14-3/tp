@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":UndoCommandParser" as UndoCommandParser LOGIC_COLOR
participant "u:UndoCommand" as UndoCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("undo 2")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("undo 2")
activate AddressBookParser

AddressBookParser -> UndoCommandParser : parse("2")
activate UndoCommandParser

create UndoCommand
UndoCommandParser -> UndoCommand
activate UndoCommand

UndoCommand --> UndoCommandParser : u
deactivate UndoCommand

UndoCommandParser --> AddressBookParser : u
deactivate UndoCommandParser

AddressBookParser --> LogicManager : u
deactivate AddressBookParser

LogicManager -> UndoCommand : execute()
activate UndoCommand

UndoCommand -> Model : getCommandHistorySize()
activate Model

Model --> UndoCommand : int
deactivate Model

alt (int >= 2) Command History size is greater than or equal to the number of undo steps
    loop 2
        UndoCommand -> Model : popCommandFromHistory()
        activate Model

        Model -> UndoableCommand : undo(Model)
        activate UndoableCommand

        UndoableCommand --> Model : CommandResult
        deactivate UndoableCommand
    end
else (int < 2) Command History size is less than the number of undo steps
    activate Model
end

Model --> UndoCommand : CommandResult
deactivate Model

UndoCommand --> LogicManager : CommandResult
deactivate UndoCommand

<-- LogicManager
deactivate LogicManager
@enduml
